plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

repositories {
    mavenCentral()
    maven { url 'https://papermc.io/repo/repository/maven-public/' }
    maven { url 'https://oss.sonatype.org/content/groups/public/' }
    maven { url 'https://repo.helpch.at/releases/' } // PAPI
    maven { url "https://maven.playpro.com/" } // CoreProtect
    maven { url "https://maven.enginehub.org/repo/" } // FAWE
    maven { url "https://repo.opencollab.dev/main/" } // Geyser
}

dependencies {
    implementation project(':common')
    compileOnly 'io.papermc.paper:paper-api:1.20.4-R0.1-SNAPSHOT'
    compileOnly 'com.sk89q.worldguard:worldguard-bukkit:7.0.7'
    implementation platform("com.intellectualsites.bom:bom-1.18.x:1.20")
    compileOnly 'com.fastasyncworldedit:FastAsyncWorldEdit-Core'
    compileOnly 'com.fastasyncworldedit:FastAsyncWorldEdit-Bukkit'
    compileOnly 'me.clip:placeholderapi:2.11.6'
    compileOnly "net.coreprotect:coreprotect:21.3"
    compileOnly 'com.mysql:mysql-connector-j:9.0.0'
    implementation "dev.dejvokep:boosted-yaml-spigot:1.5"
    implementation "dev.dejvokep:boosted-yaml:1.3.6"
    compileOnly 'org.geysermc.floodgate:api:2.2.2-SNAPSHOT'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.release = 17
}

processResources {
    filesMatching('**/*.yml') {
        expand project.properties
    }
}

tasks.register('processSources', Sync) {
    from sourceSets.main.java
    into "$buildDir/generated-src"
    filter { line -> line.replace('${version}', version.toString()) }
}

tasks.named('compileJava') {
    source = processSources.outputs
}

shadowJar {
    archiveFileName = "VexelCore-Bukkit-${project.version}.jar"
    relocate 'me.itsmcb.vexelcore.common.api', 'me.itsmcb.vexelcore.common.api'
    // TODO Experiment with minimization at some point
    //minimize()
}

tasks.named('shadowJar') {
    enableRelocation true
    relocationPrefix "libs"
}

artifacts {
    archives shadowJar
}

tasks.named('jar') {
    enabled = false
    dependsOn(shadowJar)
}